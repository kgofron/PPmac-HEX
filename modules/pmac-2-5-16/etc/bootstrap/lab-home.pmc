CLOSE

;####################################################
; Autogenerated Homing PLC for GeoBrick, DO NOT MODIFY
; Group 2:
;  Axis 1: htype = HOME, jdist = -5000, post = None
; Group 3:
;  Axis 2: htype = HOME, jdist = -5000, post = None
; Group 4:
;  Axis 3: htype = HOME, jdist = -5000, post = None
; Group 5:
;  Axis 4: htype = HOME, jdist = -5000, post = None
;  Axis 5: htype = HOME, jdist = -5000, post = None
;  Axis 6: htype = HOME, jdist = -5000, post = None
;  Axis 7: htype = HOME, jdist = -5000, post = None
;  Axis 8: htype = HOME, jdist = -5000, post = None
;####################################################

; Use a different timer for each PLC
#define timer             i(5111+(10&30)*50+10%2)
; Make timer more readable
#define MilliSeconds      * 8388608/i10

; Homing State P Variable
#define HomingState       P1000
#define StateIdle         0
#define StateConfiguring  1
#define StateMoveNeg      2
#define StateMovePos      3
#define StateHoming       4
#define StatePostHomeMove 5
#define StateAligning     6
#define StateDone         7
#define StateFastSearch   8
#define StateFastRetrace  9
#define StatePreHomeMove  10
HomingState = StateIdle

; Homing Status P Variable
#define HomingStatus      P1001
#define StatusDone        0
#define StatusHoming      1
#define StatusAborted     2
#define StatusTimeout     3
#define StatusFFErr       4
#define StatusLimit       5
#define StatusIncomplete  6
#define StatusInvalid     7
#define StatusPaused      8
#define StatusDebugHoming 9
HomingStatus = StatusDone

; Homing Group P Variable
#define HomingGroup       P1002
HomingGroup = 0

; Homing Group Backup P Variable
#define HomingBackupGroup P1003
HomingBackupGroup = 0

OPEN PLC10 CLEAR

if (HomingStatus != StatusHoming)
and (HomingStatus != StatusDebugHoming)
	HomingStatus = StatusHoming
endif

;---- Configuring State ----
HomingState=StateConfiguring
;Save the Homing group to px03
HomingBackupGroup=HomingGroup
;Save high soft limits to P variables px04..x19
P1004=i113 P1005=i213 P1006=i313 P1007=i413 P1008=i513 P1009=i613 P1010=i713 P1011=i813
;Save the low soft limits to P variables px20..x35
P1020=i114 P1021=i214 P1022=i314 P1023=i414 P1024=i514 P1025=i614 P1026=i714 P1027=i814
;Save the home capture flags to P variables px36..x51
P1036=i7012 P1037=i7022 P1038=i7032 P1039=i7042 P1040=i7112 P1041=i7122 P1042=i7132 P1043=i7142
;Store 'not flag' to use in moving off a flag in P variables px52..x67
P1052=P1036^$C P1053=P1037^$C P1054=P1038^$C P1055=P1039^$C P1056=P1040^$C P1057=P1041^$C P1058=P1042^$C P1059=P1043^$C
;Save the limit flags to P variables px68..x83
P1068=i124 P1069=i224 P1070=i324 P1071=i424 P1072=i524 P1073=i624 P1074=i724 P1075=i824
;Save the current position to P variables px84..x99
P1084=M162 P1085=M262 P1086=M362 P1087=M462 P1088=M562 P1089=M662 P1090=M762 P1091=M862
;Clear the soft limits
i113=0 i213=0 i313=0 i413=0 i513=0 i613=0 i713=0 i813=0
i114=0 i214=0 i314=0 i414=0 i514=0 i614=0 i714=0 i814=0

if (HomingBackupGroup = 1 or HomingBackupGroup = 2)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=2

	;Clear home flags
	m145=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		i7012=P1036
		cmd "#1hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 900000 MilliSeconds ; Now start checking the conditions
		while (m140=0) ; At least one motor should not be In Position
		and (m142 = 0) ; Following error check
		and (m130 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m142 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m130 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m145=0)
		HomingStatus=StatusIncomplete
	endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 3)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=3

	;Clear home flags
	m245=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		i7022=P1037
		cmd "#2hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 900000 MilliSeconds ; Now start checking the conditions
		while (m240=0) ; At least one motor should not be In Position
		and (m242 = 0) ; Following error check
		and (m230 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m242 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m230 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m245=0)
		HomingStatus=StatusIncomplete
	endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 4)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=4

	;Clear home flags
	m345=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		i7032=P1038
		cmd "#3hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 900000 MilliSeconds ; Now start checking the conditions
		while (m340=0) ; At least one motor should not be In Position
		and (m342 = 0) ; Following error check
		and (m330 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m342 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m330 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m345=0)
		HomingStatus=StatusIncomplete
	endif

endif

if (HomingBackupGroup = 1 or HomingBackupGroup = 5)
and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	HomingGroup=5

	;Clear home flags
	m445=0 m545=0 m645=0 m745=0 m845=0
	; Wait for user to tell us to continue if in debug
	if (HomingStatus = StatusDebugHoming)
		HomingStatus = StatusPaused
		while (HomingStatus = StatusPaused)
		endw
	endif

	;---- Homing State ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
		HomingState=StateHoming
		; Execute the move commands
		i7042=P1039 i7112=P1040 i7122=P1041 i7132=P1042 i7142=P1043
		cmd "#4hm #5hm #6hm #7hm #8hm"
		; Wait for the move to complete
		timer = 20 MilliSeconds ; Small delay to start moving
		while (timer > 0)
		endw
		timer = 900000 MilliSeconds ; Now start checking the conditions
		while (m440&m540&m640&m740&m840=0) ; At least one motor should not be In Position
		and (m442|m542|m642|m742|m842 = 0) ; Following error check
		and (m430|m530|m630|m730|m830 = 0) ; Limit check
		and (timer > 0) ; Check for timeout
		and (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming) ; Check that we didn't abort
		endw
		; Check why we left the while loop
		if (m442|m542|m642|m742|m842 != 0) ; Following error check failed
			HomingStatus = StatusFFErr
		endif
		if (m430|m530|m630|m730|m830 != 0) ; Limit check failed
			HomingStatus = StatusLimit
		endif
		if (timer<0 or timer=0) ; If we timed out
			HomingStatus = StatusTimeout
		endif
	endif

	;---- Check if all motors have homed ----
	if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	and (m445&m545&m645&m745&m845=0)
		HomingStatus=StatusIncomplete
	endif

endif

;---- Done ----
if (HomingStatus = StatusHoming or HomingStatus = StatusDebugHoming)
	;If we've got this far without failing, set status and state done
	HomingStatus=StatusDone
	HomingState=StateDone
	;Restore the homing group from px03
	HomingGroup=HomingBackupGroup
endif

;---- Tidy Up ----
;Stop all motors if they don't have a following error
if (m142=0)
	cmd "#1J/"
endif
if (m242=0)
	cmd "#2J/"
endif
if (m342=0)
	cmd "#3J/"
endif
if (m442=0)
	cmd "#4J/"
endif
if (m542=0)
	cmd "#5J/"
endif
if (m642=0)
	cmd "#6J/"
endif
if (m742=0)
	cmd "#7J/"
endif
if (m842=0)
	cmd "#8J/"
endif
;Restore the high soft limits from P variables px04..x19
i113=P1004 i213=P1005 i313=P1006 i413=P1007 i513=P1008 i613=P1009 i713=P1010 i813=P1011
;Restore the low soft limits from P variables px20..x35
i114=P1020 i214=P1021 i314=P1022 i414=P1023 i514=P1024 i614=P1025 i714=P1026 i814=P1027
;Restore the home capture flags from P variables px36..x51
i7012=P1036 i7022=P1037 i7032=P1038 i7042=P1039 i7112=P1040 i7122=P1041 i7132=P1042 i7142=P1043
;Restore the limit flags to P variables px68..x83
i124=P1068 i224=P1069 i324=P1070 i424=P1071 i524=P1072 i624=P1073 i724=P1074 i824=P1075

DISABLE PLC10
CLOSE

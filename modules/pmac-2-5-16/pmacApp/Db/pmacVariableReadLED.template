# % macro, __doc__, Simple template that reads an integer variable on a PMAC or
# GeoBrick which can have a value of 1 or 0 and uses an LED widget.
# % macro, P,     PV prefix
# % macro, Q,     PV suffix
# % macro, PORT,  Motor controller serial port
# % macro, SPEED, Speed to read at (F=motor scan rates, M=medium (2s), S=slow (5s))
# % macro, VAR,   Variable on PMAC to read from, e.g. P700
# % macro, ONAM,  One name
# % macro, ZNAM,  Zero name
# % macro, OSV,   One severity
# % macro, ZSV,   Zero severity
# % macro, LABEL, Label for GUI

# CSS GUI
# % gui, $(name=), boyembed, pmacApp_opi/pmac_variable_read_led_embed_box.opi, P=$(P),Q=$(Q),LABEL=$(LABEL), name=$(name=)
# % gui, $(name=), boyembed, pmacApp_opi/pmac_variable_read_led_embed.opi, P=$(P),Q=$(Q),LABEL=$(LABEL), name=$(name=)

# EGM GUI
# % gui, $(name=), edmembed, pmacVariableReadLED.edl, P=$(P), Q=$(Q), LABEL=$(LABEL)

##########################################
# Records for reading from PMAC variables
########################################## 

record(bi, "$(P)$(Q):RBV") {
  field(SCAN, "I/O Intr")
  field(PINI, "NO")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0)PMAC_VI$(SPEED=M)_$(VAR)")
  field(ONAM, "$(ONAM=On)")
  field(ZNAM, "$(ZNAM=Off)")
  field(ZSV,  "$(ZSV=NO_ALARM)")
  field(OSV,  "$(OSV=NO_ALARM)")
}
